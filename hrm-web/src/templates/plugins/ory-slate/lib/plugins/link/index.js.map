{"version":3,"sources":["../../../src/plugins/link/index.js"],"names":["A","LinkButton","state","open","href","title","hadLinks","onRef","component","e","querySelector","focus","onClick","props","editorState","onChange","preventDefault","hasLinks","inlines","some","inline","type","newState","change","unwrapInline","value","selection","isExpanded","setState","wasExpanded","handleClose","window","setTimeout","handleSubmit","wrapInline","data","collapseToEnd","insertText","extend","length","onHrefChange","target","onTitleChange","actions","Component","LinkPlugin","name","schema","nodes","Link","hoverButtons","toolbarButtons","deserialize","el","next","tagName","toLowerCase","object","childNodes","Data","create","attrs","find","serialize","children","get","renderNode","node","Plugin"],"mappings":"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","file":"index.js","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n/* eslint-disable no-alert, prefer-reflect, default-case, react/display-name */\nimport LinkIcon from '@material-ui/icons/Link'\nimport React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { ToolbarButton } from '../../helpers'\nimport Plugin from '../Plugin'\nimport Link from './node'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport { Data } from 'slate'\nimport type { Props } from '../props'\nimport ThemeProvider from 'ory-editor-ui/lib/ThemeProvider'\n\nexport const A = 'LINK/LINK'\n\nclass LinkButton extends Component {\n  state = {\n    open: false,\n    href: '',\n    title: '',\n    hadLinks: false\n  }\n\n  props: Props\n\n  input: Component<*, *, *>\n\n  onRef = (component: Component<*, *, *>) => {\n    if (!component && true) {\n      return null\n    }\n\n    const e = component.querySelector('input')\n    if (e) {\n      e.focus()\n    }\n  }\n\n  onClick = e => {\n    const { editorState, onChange } = this.props\n    e.preventDefault()\n\n    const hasLinks = editorState.inlines.some(\n      (inline: any) => inline.type === A\n    )\n\n    if (hasLinks) {\n      const newState = editorState\n        .change()\n        .unwrapInline(A)\n        .value\n      onChange({ value: newState })\n    } else if (editorState.selection.isExpanded) {\n      this.setState({\n        open: true,\n        wasExpanded: editorState.selection.isExpanded,\n        href: '',\n        title: '',\n        hadLinks: hasLinks\n      })\n    } else {\n      this.setState({\n        open: true,\n        wasExpanded: editorState.selection.isExpanded,\n        href: '',\n        title: '',\n        hadLinks: hasLinks\n      })\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n\n    const newState = this.props.editorState\n      .change()\n      .focus()\n      .value\n    window.setTimeout(() => this.props.onChange({ value: newState }), 1)\n  }\n\n  handleSubmit = () => {\n    this.setState({ open: false })\n\n    if (!this.state.href) {\n      this.handleClose()\n      return\n    }\n\n    if (this.state.wasExpanded) {\n      const newState = this.props.editorState\n        .change()\n        .focus()\n        .wrapInline({\n          type: A,\n          data: { href: this.state.href }\n        })\n        .collapseToEnd()\n        .value\n\n      window.setTimeout(() => this.props.onChange({ value: newState }), 1)\n      window.setTimeout(() => this.props.focus(), 100)\n      return\n    }\n\n    if (!this.state.title) {\n      this.handleClose()\n      return\n    }\n\n    const newState = this.props.editorState\n      .change()\n      .insertText(this.state.title)\n      .extend(-this.state.title.length)\n      .wrapInline({\n        type: A,\n        data: { href: this.state.href }\n      })\n      .collapseToEnd()\n      .focus()\n      .value\n\n    this.props.onChange({ value: newState })\n    window.setTimeout(() => this.props.focus(), 100)\n  }\n\n  onHrefChange = e => {\n    this.setState({ href: e.target.value })\n  }\n\n  onTitleChange = e => {\n    this.setState({ title: e.target.value })\n  }\n\n  render() {\n    const actions = <React.Fragment>\n      <Button\n        variant='flat'\n        label=\"Cancel\"\n        color=\"primary\"\n        onClick={this.handleClose}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant='flat'\n        label=\"Ok\"\n        color=\"primary\"\n        onClick={this.handleSubmit}\n      >\n        Ok\n      </Button>\n    </React.Fragment>\n    const { editorState } = this.props\n\n    const hasLinks = editorState.inlines.some(\n      (inline: any) => inline.type === A\n    )\n    return (\n      <ThemeProvider>\n        <span>\n          <ToolbarButton\n            onClick={this.onClick}\n            isActive={hasLinks}\n            icon={<LinkIcon />}\n          />\n          <span>\n            <Dialog\n              className=\"ory-prevent-blur\"\n              title=\"Create a link\"\n              // modal={false}\n              open={this.state.open}\n              actions={[actions]}\n            >\n              <DialogTitle id=\"confirmation-dialog-title\">\n                Create a link\n              </DialogTitle>\n              <DialogContent>\n                {this.state.wasExpanded ? null : (\n                  <div>\n                    <TextField\n                      placeholder=\"Link title\"\n                      onChange={this.onTitleChange}\n                      value={this.state.title}\n                    />\n                  </div>\n                )}\n                <div ref={this.onRef}>\n                  <TextField\n                    placeholder=\"http://example.com/my/link.html\"\n                    onChange={this.onHrefChange}\n                    value={this.state.href}\n                  />\n                </div>\n              </DialogContent>\n              <DialogActions>{actions}</DialogActions>\n            </Dialog>\n          </span>\n        </span>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default class LinkPlugin extends Plugin {\n  name = 'link'\n\n  schema = {\n    nodes: { [A]: Link }\n  }\n\n  hoverButtons = [LinkButton]\n  toolbarButtons = [LinkButton]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'a':\n        return {\n          object: 'inline',\n          type: A,\n          nodes: next(el.childNodes),\n          data: Data.create({\n            href: (\n              el.attrs.find(({ name }) => name === 'href') || {\n                value: ''\n              }\n            ).value\n          })\n        }\n    }\n  }\n\n  serialize = (\n    object: { type: string, object: string, data: any },\n    children: any[]\n  ) => {\n    if (object.object !== 'inline') {\n      return\n    }\n    switch (object.type) {\n      case A:\n        return <a href={object.data.get('href')}>{children}</a>\n    }\n  }\n\n  renderNode = props => {\n    switch (props.node.type) {\n      case A: {\n        return (\n          <Link {...props} />\n        )\n      }\n    }\n  }\n}\n"]}