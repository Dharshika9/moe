{"version":3,"sources":["../../src/plugins/headings.js"],"names":["H1","H2","H3","H4","H5","H6","createNode","type","el","next","object","nodes","childNodes","HeadingsPlugin","props","DEFAULT_NODE","Plugin","createButton","icon","editorState","onChange","onClick","e","preventDefault","isActive","blocks","some","block","value","change","setBlocks","name","schema","toolbarButtons","deserialize","tagName","toLowerCase","serialize","children","style","textAlign","data","get","renderNode","node"],"mappings":"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","file":"headings.js","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n/* eslint-disable prefer-reflect, default-case, react/display-name */\nimport React from 'react'\nimport H1Icon from '@material-ui/icons/LooksOne'\nimport H2Icon from '@material-ui/icons/LooksTwo'\nimport H3Icon from '@material-ui/icons/Looks3'\nimport H4Icon from '@material-ui/icons/Looks4'\nimport H5Icon from '@material-ui/icons/Looks5'\nimport H6Icon from '@material-ui/icons/Looks6'\n// import { Data } from 'slate'\nimport { makeTagNode, ToolbarButton } from '../helpers'\nimport Plugin from './Plugin'\nimport type { Props } from './props'\n\nexport const H1 = 'HEADINGS/HEADING-ONE'\nexport const H2 = 'HEADINGS/HEADING-TWO'\nexport const H3 = 'HEADINGS/HEADING-THREE'\nexport const H4 = 'HEADINGS/HEADING-FOUR'\nexport const H5 = 'HEADINGS/HEADING-FIVE'\nexport const H6 = 'HEADINGS/HEADING-SIX'\n\nconst createNode = (type: string, el: any, next: any) => ({\n  object: 'block',\n  type,\n  // data: Data.create({ style: el.attribs.style }),\n  nodes: next(el.childNodes)\n})\n\nexport default class HeadingsPlugin extends Plugin {\n  constructor(props: Props) {\n    super(props)\n\n    this.DEFAULT_NODE = props.DEFAULT_NODE\n  }\n\n  props: Props\n\n  // eslint-disable-next-line react/display-name\n  createButton = (type, icon) => ({ editorState, onChange }: Props) => {\n    const onClick = e => {\n      e.preventDefault()\n\n      const isActive = editorState.blocks.some(block => block.type === type)\n\n      onChange({\n        value: editorState\n          .change()\n          .setBlocks(isActive ? this.DEFAULT_NODE : type).value\n      })\n    }\n\n    const isActive = editorState.blocks.some(block => block.type === type)\n\n    return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\n  }\n\n  name = 'headings'\n\n  schema = {\n    nodes: {\n      [H1]: makeTagNode('h1'),\n      [H2]: makeTagNode('h2'),\n      [H3]: makeTagNode('h3'),\n      [H4]: makeTagNode('h4'),\n      [H5]: makeTagNode('h5'),\n      [H6]: makeTagNode('h6')\n    }\n  }\n\n  toolbarButtons = [\n    this.createButton(H1, <H1Icon />),\n    this.createButton(H2, <H2Icon />),\n    this.createButton(H3, <H3Icon />),\n    this.createButton(H4, <H4Icon />),\n    this.createButton(H5, <H5Icon />),\n    this.createButton(H6, <H6Icon />)\n  ]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'h1':\n        return createNode(H1, el, next)\n      case 'h2':\n        return createNode(H2, el, next)\n      case 'h3':\n        return createNode(H3, el, next)\n      case 'h4':\n        return createNode(H4, el, next)\n      case 'h5':\n        return createNode(H5, el, next)\n      case 'h6':\n        return createNode(H6, el, next)\n    }\n  }\n\n  serialize = (\n    object: { type: string, object: string, data: any },\n    children: any[]\n  ) => {\n    if (object.object !== 'block') {\n      return\n    }\n    const style = { textAlign: object.data.get('align') }\n\n    switch (object.type) {\n      case H1:\n        return <h1 style={style}>{children}</h1>\n      case H2:\n        return <h2 style={style}>{children}</h2>\n      case H3:\n        return <h3 style={style}>{children}</h3>\n      case H4:\n        return <h4 style={style}>{children}</h4>\n      case H5:\n        return <h5 style={style}>{children}</h5>\n      case H6:\n        return <h6 style={style}>{children}</h6>\n    }\n  }\n\n  renderNode = props => {\n    const { children } = props\n    const style = { textAlign: props.node.data.get('align') }\n    switch (props.node.type) {\n      case H1:\n        return <h1 style={style}>{children}</h1>\n      case H2:\n        return <h2 style={style}>{children}</h2>\n      case H3:\n        return <h3 style={style}>{children}</h3>\n      case H4:\n        return <h4 style={style}>{children}</h4>\n      case H5:\n        return <h5 style={style}>{children}</h5>\n      case H6:\n        return <h6 style={style}>{children}</h6>\n    }\n  }\n}\n"]}