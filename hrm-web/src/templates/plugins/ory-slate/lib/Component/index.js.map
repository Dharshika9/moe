{"version":3,"sources":["../../src/Component/index.js"],"names":["onBlur","_event","_data","state","theme","palette","type","Slate","componentDidMount","selection","window","getSelection","updateToolbar","shouldComponentUpdate","nextProps","editorState","props","toolbar","focused","readOnly","componentDidUpdate","onStateChange","value","onChange","handleOpen","isBlurred","isCollapsed","pos","left","top","width","style","opacity","scrollY","offsetHeight","scrollX","offsetWidth","onPaste","e","data","isShift","serializer","deserialize","html","document","change","insertFragment","plugins","onKeyDown","HoverButtons","ToolbarButtons","focus","isOpened","isExpanded","isFocused","padding","Boolean","placeholder","Component"],"mappings":"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","file":"index.js","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n/* eslint-disable no-alert, prefer-reflect, no-underscore-dangle */\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport React, { Component } from 'react'\nimport { Portal } from 'react-portal'\nimport position from 'selection-position'\nimport { Editor } from 'slate-react'\nimport { BottomToolbar, ThemeProvider } from 'ory-editor-ui'\nimport { placeholder } from '../const'\n\nimport { html as serializer } from '../hooks.js'\n\nconst onBlur = (_event, _data, state) => state\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n\nclass Slate extends Component {\n  componentDidMount = () => {\n    this.selection = window.getSelection()\n    this.updateToolbar()\n  }\n\n  shouldComponentUpdate = nextProps =>\n    nextProps.state.editorState !== this.props.state.editorState ||\n    nextProps.state.toolbar !== this.props.state.toolbar ||\n    nextProps.focused !== this.props.focused ||\n    nextProps.readOnly !== this.props.readOnly\n\n  componentDidUpdate = () => this.updateToolbar()\n\n  onStateChange = ({ value }) => {\n    this.props.onChange({ editorState: value })\n  }\n\n  handleOpen = portal => {\n    // this.toolbar = portal.firstChild\n  }\n\n  updateToolbar = () => {\n    const { editorState } = this.props.state\n    const toolbar = this.toolbar\n\n    if (\n      !toolbar ||\n      editorState.isBlurred ||\n      editorState.selection.isCollapsed\n    ) {\n      return\n    }\n    const pos = position()\n    if (pos) {\n      const { left, top, width } = position()\n\n      toolbar.style.opacity = 1\n      toolbar.style.top = `${top + window.scrollY - toolbar.offsetHeight}px`\n      toolbar.style.left = `${left +\n        window.scrollX -\n        toolbar.offsetWidth / 2 +\n        width / 2}px`\n    }\n  }\n\n  onPaste = (e, data, state) => {\n    if (data.type !== 'html') return\n    if (data.isShift) return\n\n    const { document } = serializer.deserialize(data.html)\n\n    return state.change().insertFragment(document)\n  }\n\n  render() {\n    const {\n      focused,\n      readOnly,\n      state: { editorState },\n      plugins,\n      onKeyDown,\n      HoverButtons,\n      ToolbarButtons,\n      focus\n    } = this.props\n    const isOpened = editorState.selection.isExpanded && editorState.isFocused\n\n    return (\n      <div>\n        <Portal onOpen={this.handleOpen}>\n          {/* ory-prevent-blur is required to prevent global blurring */}\n          <ThemeProvider theme={theme}>\n            <div\n              className={\n                'ory-prevent-blur ory-plugins-content-slate-inline-toolbar ' +\n                (isOpened\n                  ? ''\n                  : 'ory-plugins-content-slate-inline-toolbar--hidden')\n              }\n              style={{ padding: 0 }}\n              ref={toolbar => {\n                this.toolbar = toolbar\n                toolbar && this.updateToolbar()\n              }}\n            >\n              <HoverButtons\n                editorState={editorState}\n                onChange={this.onStateChange}\n                focus={focus}\n              />\n            </div>\n          </ThemeProvider>\n        </Portal>\n        <Editor\n          onChange={this.onStateChange}\n          onKeyDown={onKeyDown}\n          readOnly={Boolean(readOnly)}\n          className=\"ory-plugins-content-slate-container\"\n          onBlur={onBlur}\n          value={editorState}\n          plugins={plugins}\n          onPaste={this.onPaste}\n          placeholder={placeholder}\n        />\n        {readOnly ? null : (\n          <BottomToolbar open={focused}>\n            <ToolbarButtons\n              editorState={editorState}\n              onChange={this.onStateChange}\n              focus={focus}\n            />\n          </BottomToolbar>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Slate\n"]}